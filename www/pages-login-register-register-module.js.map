{"version":3,"sources":["webpack:///./src/pages/login/register/register.module.ts","webpack:///./src/pages/login/register/register.page.html","webpack:///./src/pages/login/register/register.page.scss","webpack:///./src/pages/login/register/register.page.ts"],"names":[],"mappings":"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","file":"pages-login-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule, IonicSelectableModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding-horizontal scroll=\\\"false\\\">\\n  <ion-list no-margin padding>\\n    <form margin-top [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\" autocomplete=\\\"off\\\">\\n    <ion-item no-padding [class.invalid]=\\\"form.get('name').invalid\\\">\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\n      <ion-input placeholder=\\\"Your name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('name').hasError('required') && (form.get('name').touched || form.get('name').dirty)\\\">Name is required</div>\\n\\n    <ion-row no-padding formGroupName=\\\"phone\\\">\\n      <ion-col size=\\\"3\\\" no-padding tappable>\\n        <ion-item no-padding>\\n          <ion-label position=\\\"floating\\\">Country</ion-label>\\n          <ionic-selectable\\n            [(ngModel)]=\\\"selected\\\"\\n            searchPlaceholder=\\\"Search country\\\"\\n            shouldFocusSearchbar=\\\"true\\\"\\n            headerColor=\\\"primary\\\"\\n            formControlName=\\\"area\\\"\\n            [items]=\\\"phones\\\"\\n            itemValueField=\\\"callingCode\\\"\\n            itemTextField=\\\"name\\\"\\n            [canSearch]=\\\"true\\\">\\n          </ionic-selectable>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col size=\\\"9\\\" no-padding padding-left>\\n        <ion-item no-padding [class.invalid]=\\\"form.get('phone.tel').invalid\\\">\\n          <ion-label position=\\\"floating\\\">Phone</ion-label>\\n          <ion-input #input type=\\\"tel\\\" placeholder=\\\"e.g. 8128080xxxx\\\" pattern=\\\"[0-9]*\\\" clearInput formControlName=\\\"tel\\\" autocomplete=\\\"off\\\" required minlength=\\\"8\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('required') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone is required</div>\\n        <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('minlength') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone must be >= 8 characters</div>\\n        <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('maxlength') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone number max length 15 characters</div>\\n        <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('pattern') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone number must be numeric</div>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-item no-padding [class.invalid]=\\\"form.get('email').invalid\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input placeholder=\\\"john@doe.com\\\" formControlName=\\\"email\\\" autocomplete=\\\"off\\\" type=\\\"email\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('email').invalid && (form.get('email').touched || form.get('email').dirty)\\\">Email is not valid</div>\\n\\n    <ion-item no-padding [class.invalid]=\\\"form.get('pass').invalid\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input formControlName=\\\"pass\\\" autocomplete=\\\"off\\\" type=\\\"password\\\" minlength=\\\"6\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('pass').hasError('required') && (form.get('pass').touched || form.get('pass').dirty)\\\">Password is required</div>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('pass').hasError('minlength') && (form.get('pass').touched || form.get('pass').dirty)\\\">Password length must be >= 6</div>\\n\\n    <ion-item no-padding [class.invalid]=\\\"form.get('pass2').invalid\\\">\\n      <ion-label position=\\\"floating\\\">Password Confirmation</ion-label>\\n      <ion-input formControlName=\\\"pass2\\\" autocomplete=\\\"off\\\" type=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('pass2').hasError('required') && (form.get('pass2').touched || form.get('pass2').dirty)\\\">Password confirmation is required</div>\\n    <div class=\\\"error\\\" *ngIf=\\\"(form.get('pass').value != form.get('pass2').value) && (form.get('pass2').touched || form.get('pass2').dirty)\\\">Password confirmation is not valid</div>\\n\\n    <div margin-top>\\n      <ion-button margin-top type=\\\"submit\\\" shape=\\\"round\\\" expand=\\\"block\\\" [disabled]=\\\"form.invalid || (form.get('pass').value != form.get('pass2').value)\\\">Sign Up</ion-button>\\n      <div margin-top text-center (click)=\\\"showPrivacy()\\\">\\n        By signing up, you agree with our <a>terms</a> & <a>privacy policy</a>.\\n      </div>\\n    </div>\\n    </form>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcGFnZXMvbG9naW4vcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { AuthService, LoadingService, ToastService } from 'src/services/services';\nimport { NavController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  public form: FormGroup;\n  public phones: any = [];\n  private phone: any = {};\n  selected: any;\n\n  constructor(private auth: AuthService, private nav: NavController, private param: ActivatedRoute, private toast: ToastService, private router: Router,\n    private loading: LoadingService, private fb: FormBuilder, private http: HttpClient) {\n      this.param.queryParams.subscribe((params: any) => {\n        if (params) {\n          this.phone = params.phone ? JSON.parse(params.phone) : {};\n        }\n      });\n    }\n\n  ngOnInit() {\n    this.http.get('assets/country-calling-codes.min.json').subscribe((data: any) => {\n      for (let i = 0; i < data.length; i++) {\n        data[i].name = data[i].name + ' (+' + data[i].callingCode + ')';\n        this.phones.push(data[i]);\n      }\n\n      console.log(this.phone);\n      this.selected = this.phone && this.phone.area ? this.phone.area : this.phones.filter(q => q.callingCode === '1')[0];\n    });\n\n    this.form = this.fb.group({\n      name: ['', Validators.required ],\n      phone: this.fb.group({\n        area: ['+1', [Validators.required]],\n        tel: [this.phone ? this.phone.tel : '', [Validators.required, Validators.minLength(8), Validators.maxLength(15), Validators.pattern('[0-9]+')]]\n      }),\n      email: ['', [Validators.required, Validators.email] ],\n      pass: ['', [Validators.required, Validators.minLength(6)] ],\n      pass2: ['', [Validators.required, Validators.minLength(6)] ]\n    });\n  }\n\n  submit() {\n    console.log(this.form.value);\n    this.loading.present();\n    this.auth.checkPhoneNumber(this.form.value.phone).then((q: string) => {\n      this.toast.showWithClose(q);\n      this.loading.dismiss();\n    }).catch(() => {\n      this.auth.fetchProvidersForEmail(this.form.value.email).then(() => {\n        this.toast.showWithClose('Email ' + this.form.value.email + ' is already used');\n        this.loading.dismiss();\n      }).catch(() => {\n        this.auth.sendSMSVerify(this.form.value.phone).then((res: any) => {\n          this.loading.dismiss();\n          const param: NavigationExtras = {\n            queryParams: {\n              action: 'register',\n              phone: JSON.stringify(this.form.value.phone),\n              user: JSON.stringify(this.form.value),\n              verificationId: this.auth.platform === 'ios' ? res : res.verificationId\n            }\n          };\n          this.router.navigate(['login/verif-phone'], param);\n        }).catch(err => {\n          console.log(err);\n          this.toast.showWithClose(err);\n          this.loading.dismiss();\n        });\n      });\n    });\n  }\n\n  showPrivacy() {}\n\n}\n"],"sourceRoot":""}