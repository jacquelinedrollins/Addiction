{"version":3,"sources":["webpack:///./src/pages/login/phone-auth/phone-auth.module.ts","webpack:///./src/pages/login/phone-auth/phone-auth.page.html","webpack:///./src/pages/login/phone-auth/phone-auth.page.scss","webpack:///./src/pages/login/phone-auth/phone-auth.page.ts"],"names":[],"mappings":"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","file":"pages-login-phone-auth-phone-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { IonicModule } from '@ionic/angular';\n\nimport { PhoneAuthPage } from './phone-auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhoneAuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule, IonicSelectableModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PhoneAuthPage]\n})\nexport class PhoneAuthPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Login using Phone Number</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content scroll=\\\"false\\\">\\n  <ion-list no-margin padding margin-top>\\n    <h6>Enter your phone number</h6>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\n        <ion-row no-padding formGroupName=\\\"phone\\\">\\n          <ion-col size=\\\"3\\\" tappable>\\n            <ion-item no-padding tappable>\\n              <ion-label position=\\\"floating\\\">Country</ion-label>\\n              <ionic-selectable\\n                [(ngModel)]=\\\"selected\\\"\\n                searchPlaceholder=\\\"Search country\\\"\\n                shouldFocusSearchbar=\\\"true\\\"\\n                headerColor=\\\"primary\\\"\\n                formControlName=\\\"area\\\"\\n                [items]=\\\"phones\\\"\\n                itemValueField=\\\"callingCode\\\"\\n                itemTextField=\\\"name\\\"\\n                [canSearch]=\\\"true\\\">\\n              </ionic-selectable>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"9\\\">\\n              <ion-item no-padding [class.invalid]=\\\"form.get('phone.tel').invalid\\\">\\n                <ion-label position=\\\"floating\\\">Phone Number</ion-label>\\n                <ion-input type=\\\"tel\\\" placeholder=\\\"e.g. 8128080xxxx\\\" pattern=\\\"[0-9]*\\\" clearInput formControlName=\\\"tel\\\" autocomplete=\\\"off\\\" required minlength=\\\"8\\\"></ion-input>\\n              </ion-item>\\n              <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('required') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone is required</div>\\n              <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('minlength') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone must be >= 8 characters</div>\\n              <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('maxlength') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone number max length 15 characters</div>\\n              <div class=\\\"error\\\" *ngIf=\\\"form.get('phone.tel').hasError('pattern') && (form.get('phone.tel').touched || form.get('phone.tel').dirty)\\\">Phone number must be numeric</div>\\n          </ion-col>\\n        </ion-row>\\n        \\n        <div margin-vertical>\\n          <ion-button type=\\\"submit\\\" shape=\\\"round\\\" expand=\\\"block\\\" [disabled]=\\\"form.invalid\\\">Sign In</ion-button>\\n          <div padding-top text-center color=\\\"dark\\\">We will send code via SMS</div>\\n        </div>\\n    </form>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcGFnZXMvbG9naW4vcGhvbmUtYXV0aC9waG9uZS1hdXRoLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService, LoadingService, ToastService } from 'src/services/services';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-phone-auth',\n  templateUrl: './phone-auth.page.html',\n  styleUrls: ['./phone-auth.page.scss'],\n})\nexport class PhoneAuthPage implements OnInit {\n  public form: FormGroup;\n  public phones: any = [];\n  selected: any;\n\n  constructor(private auth: AuthService, private alert: AlertController, private router: Router, private toast: ToastService, private nav: NavController,\n    private loading: LoadingService, private fb: FormBuilder, private http: HttpClient) {\n      this.form = this.fb.group({\n        phone: this.fb.group({\n          area: ['+1', [Validators.required]],\n          tel: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(15), Validators.pattern('[0-9]+')]]\n        })\n      });\n    }\n\n  ngOnInit() {\n    this.http.get('assets/country-calling-codes.min.json').subscribe((data: any) => {\n      for (let i = 0; i < data.length; i++) {\n        data[i].name = data[i].name + ' (+' + data[i].callingCode + ')';\n        this.phones.push(data[i]);\n      }\n\n      this.selected = this.phones.filter(q => q.callingCode === '1')[0];\n    });\n  }\n\n  submit() {\n    this.loading.present().then(() => {\n      this.auth.checkPhoneNumber(this.form.value.phone).then(() => {\n        this.auth.sendSMSVerify(this.form.value.phone).then((res: any) => {\n          this.loading.dismiss();\n          const param: NavigationExtras = {\n            queryParams: {\n              phone: JSON.stringify(this.form.value.phone),\n              verificationId: this.auth.platform === 'ios' ? res : res.verificationId\n            }\n          };\n          this.router.navigate(['login/verif-phone'], param);\n        }).catch(err => {\n          console.log(err);\n          this.loading.dismiss();\n          this.toast.showWithClose(err);\n        });\n      }).catch((err) => {\n        this.loading.dismiss();\n        this.notRegistered(err);\n      });\n    });\n  }\n\n  async notRegistered(err) {\n    const alert = await this.alert.create({\n      header: 'Not Registered yet',\n      message: err,\n      buttons: [{\n          text: 'No',\n          handler: () => {}\n        }, {\n          text: 'YES',\n          handler: () => {\n            const param: NavigationExtras = {\n              queryParams: {\n                phone: JSON.stringify(this.form.value.phone),\n              }\n            };\n            this.router.navigate(['register'], param);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n"],"sourceRoot":""}