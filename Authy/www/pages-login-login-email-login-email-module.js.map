{"version":3,"sources":["webpack:///./src/pages/login/login-email/login-email.module.ts","webpack:///./src/pages/login/login-email/login-email.page.html","webpack:///./src/pages/login/login-email/login-email.page.scss","webpack:///./src/pages/login/login-email/login-email.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEO;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW,EAAE,kEAAmB;gBAChC,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,gEAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBjC,01D;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACc;AACzB;AACV;AAO/C;IAIE,wBAAoB,IAAiB,EAAU,KAAqB,EAAU,KAAmB,EAAU,GAAkB,EACnH,OAAuB,EAAU,EAAe;QAD1D,iBAOG;QAPiB,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAc;QAAU,QAAG,GAAH,GAAG,CAAe;QACnH,YAAO,GAAP,OAAO,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QACtD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,MAAW;YAC3C,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAE;YAC7D,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;SAC5D,CAAC,CAAC;IACL,CAAC;IAED,+BAAM,GAAN;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;YACpD,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IA/BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mHAAsC;;SAEvC,CAAC;+EAK0B,iEAAW,EAAiB,8DAAc,EAAiB,kEAAY,EAAe,4DAAa;YAC1G,oEAAc,EAAc,0DAAW;OAL/C,cAAc,CAiC1B;IAAD,qBAAC;CAAA;AAjC0B","file":"pages-login-login-email-login-email-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginEmailPage } from './login-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginEmailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginEmailPage]\n})\nexport class LoginEmailPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Login using Email</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content scroll=\\\"false\\\">\\n  <ion-list no-margin padding margin-top>\\n    <form margin-top [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\" autocomplete=\\\"off\\\">\\n\\n    <ion-item no-padding [class.invalid]=\\\"form.get('email').invalid\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input placeholder=\\\"john@doe.com\\\" formControlName=\\\"email\\\" clearInput autocomplete=\\\"off\\\" type=\\\"email\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('email').invalid && (form.get('email').touched || form.get('email').dirty)\\\">Email is not valid</div>\\n\\n    <ion-item no-padding [class.invalid]=\\\"form.get('pass').invalid\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input placeholder=\\\"Your password\\\" formControlName=\\\"pass\\\" clearInput autocomplete=\\\"off\\\" type=\\\"password\\\" minlength=\\\"6\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('pass').hasError('required') && (form.get('pass').touched || form.get('pass').dirty)\\\">Password is required</div>\\n    <div class=\\\"error\\\" *ngIf=\\\"form.get('pass').hasError('minlength') && (form.get('pass').touched || form.get('pass').dirty)\\\">Password length must be > 6</div>\\n  \\n    <div margin-top>\\n      <ion-button icon-start margin-top type=\\\"submit\\\" shape=\\\"round\\\" expand=\\\"block\\\" [disabled]=\\\"form.invalid\\\">\\n        Sign In\\n      </ion-button>\\n      <ion-button margin-top fill=\\\"clear\\\" expand=\\\"block\\\" tappable routerLink=\\\"/login/forgot\\\">Forgot password?</ion-button>\\n    </div>\\n    \\n    </form>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcGFnZXMvbG9naW4vbG9naW4tZW1haWwvbG9naW4tZW1haWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService, LoadingService, ToastService } from 'src/services/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login-email',\n  templateUrl: './login-email.page.html',\n  styleUrls: ['./login-email.page.scss'],\n})\nexport class LoginEmailPage implements OnInit {\n  public form: FormGroup;\n  public email: string;\n\n  constructor(private auth: AuthService, private param: ActivatedRoute, private toast: ToastService, private nav: NavController,\n    private loading: LoadingService, private fb: FormBuilder) {\n      this.param.queryParams.subscribe((params: any) => {\n        if (params) {\n          this.email = params.email;\n        }\n      });\n    }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: [this.email, [Validators.required, Validators.email] ],\n      pass: ['', [Validators.required, Validators.minLength(6)] ]\n    });\n  }\n\n  submit() {\n    this.loading.present();\n    console.log(this.form.value);\n    this.auth.loginByEmail(this.form.value).then((res: any) => {\n      this.loading.dismiss();\n      this.nav.navigateRoot('tabs');\n    }).catch(err => {\n      console.log(err);\n      this.toast.showWithClose(err);\n      this.loading.dismiss();\n    });\n  }\n\n}\n"],"sourceRoot":""}